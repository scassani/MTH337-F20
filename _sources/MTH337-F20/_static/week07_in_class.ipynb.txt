{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Week 7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "plot $x^2+1$ in $-1\\leq x\\leq 1$ using at least 100 points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100,)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=np.linspace(-1,1,100)\n",
    "x.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-1.0 1.0\n"
     ]
    }
   ],
   "source": [
    "print(x[0],x[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x22e1bf22c50>]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=np.linspace(-1,1,100)\n",
    "y=x**2+1\n",
    "plt.plot(x,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Q7 - generate a 3x3 subplots grid, we are interested in the lower left corner"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAI8AAABjCAYAAACi5VNqAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAE5klEQVR4nO3dT4gWdRzH8fcnzQIPCekhSjBJWjx00IfwFEEE6kEPddCLGcYiJZ2DDoGX6BRIkWwkZQeTPG1QBFHgSfNZKNOiWINoSXCt8BJYwrfDDLZujzuzX2d8Zh8/L3jgmWf+PN8f+2GeZ2b2+Y4iArOMu4ZdgC1dDo+lOTyW5vBYmsNjaQ6PpVWGR9IRSZcknbvJfEk6JGla0llJm5ov07qozp7nfWDrAvO3ARvKxzjwzq2XZUtBZXgi4iTwxwKL7ASORuEUsErSA00VaN3VxHeeB4Ff50zPlK/ZiFvewDY04LWB1zwkjVN8tLFy5crNY2NjDby93aqpqanLEbFmses1EZ4ZYO2c6YeA3wYtGBETwARAr9eLfr/fwNvbrZL0S2a9Jj62JoE95VHXFuBKRFxsYLvWcZV7HknHgCeB1ZJmgNeAuwEi4jDwKbAdmAb+Ap5vq1jrlsrwRMTuivkBvNRYRbZk+AyzpTk8lubwWJrDY2kOj6U5PJbm8Fiaw2NpDo+lOTyW5vBYmsNjaQ6PpTk8lubwWJrDY2kOj6U5PJbm8Fiaw2NpDo+lOTyW5vBYWq3wSNoq6ceyB88rA+bvlTQr6Zvy8ULzpVrX1PnF6DLgbeBpit+ln5E0GRHfz1v0eEQcaKFG66g6e57HgemI+Dki/gY+oujJY3e4OuGp23/nmbKt3AlJawfMtxFTJzx1+u98AqyLiMeAL4APBm5IGpfUl9SfnZ1dXKXWOXXCU9l/JyJ+j4ir5eS7wOZBG4qIiYjoRURvzZpF9xKyjqkTnjPABkkPS1oB7KLoyXPdvB6EO4AfmivRuqpOi5Vrkg4AnwPLgCMRcV7SQaAfEZPAy5J2ANcoml/ubbFm6wgN65ZJbivXHZKmIqK32PV8htnSHB5Lc3gszeGxNIfH0hweS3N4LM3hsTSHx9IcHktzeCzN4bE0h8fSHB5Lc3gszeGxNIfH0hweS3N4LM3hsTSHx9IcHktzeCytqf4890g6Xs4/LWld04Va91SGZ05/nm3ARmC3pI3zFtsH/BkRjwBvAm80Xah1T1P9eXbyX2eME8BTkgZ117AR0lR/nuvLRMQ14ApwfxMFWndVNjqgXn+eOssgaRwYLyevSjpX4/27bDVwedhFNODRzEp1wlPZn2fOMjOSlgP3UXTLuEFETAATAJL6mR/Xd8kojAGKcWTWa6Q/Tzn9XPn8WeDLGFb7DbttmurP8x7woaRpij3OrjaLtm4YWn8eSePlx9iSNQpjgPw4hhYeW/p8ecLSWg/PKFzaGIXbJ0g6IunSzU6PqHCoHONZSZsqNxoRrT0ovmBfANYDK4BvgY3zlnkROFw+30VxG4JW62phDHuBt4Zda8U4ngA2AeduMn878BnFObstwOmqbba95xmFSxsjcfuEiDjJgHNvc+wEjkbhFLBqXovk/2k7PKNwaeNOuX1C3XFe13Z4Gru0MUSN3T6h4xb9d2g7PIu5tMFClzaGqLHbJ3Rcnb/VDdoOzyhc2rhTbp8wCewpj7q2AFci4uKCa9yGb/nbgZ8ojlheLV87COwon98LfAxMA18D64d9ZJIYw+vAeYojsa+AsWHXPGAMx4CLwD8Ue5l9wH5gfzlfFP/0dwH4DuhVbdNnmC3NZ5gtzeGxNIfH0hweS3N4LM3hsTSHx9IcHkv7FyqzOWDK9CHBAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(3,3,7)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Q4 - produce an array from 4.01 to 4.71 with steps of 0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4.01 4.11 4.21 4.31 4.41 4.51 4.61 4.71]\n"
     ]
    }
   ],
   "source": [
    "w=np.arange(4.01,4.71,.1) # better to use 4.72 as endpoint (to avoid rounding issues)\n",
    "print(w)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on built-in function arange in module numpy:\n",
      "\n",
      "arange(...)\n",
      "    arange([start,] stop[, step,], dtype=None)\n",
      "    \n",
      "    Return evenly spaced values within a given interval.\n",
      "    \n",
      "    Values are generated within the half-open interval ``[start, stop)``\n",
      "    (in other words, the interval including `start` but excluding `stop`).\n",
      "    For integer arguments the function is equivalent to the Python built-in\n",
      "    `range` function, but returns an ndarray rather than a list.\n",
      "    \n",
      "    When using a non-integer step, such as 0.1, the results will often not\n",
      "    be consistent.  It is better to use `numpy.linspace` for these cases.\n",
      "    \n",
      "    Parameters\n",
      "    ----------\n",
      "    start : number, optional\n",
      "        Start of interval.  The interval includes this value.  The default\n",
      "        start value is 0.\n",
      "    stop : number\n",
      "        End of interval.  The interval does not include this value, except\n",
      "        in some cases where `step` is not an integer and floating point\n",
      "        round-off affects the length of `out`.\n",
      "    step : number, optional\n",
      "        Spacing between values.  For any output `out`, this is the distance\n",
      "        between two adjacent values, ``out[i+1] - out[i]``.  The default\n",
      "        step size is 1.  If `step` is specified as a position argument,\n",
      "        `start` must also be given.\n",
      "    dtype : dtype\n",
      "        The type of the output array.  If `dtype` is not given, infer the data\n",
      "        type from the other input arguments.\n",
      "    \n",
      "    Returns\n",
      "    -------\n",
      "    arange : ndarray\n",
      "        Array of evenly spaced values.\n",
      "    \n",
      "        For floating point arguments, the length of the result is\n",
      "        ``ceil((stop - start)/step)``.  Because of floating point overflow,\n",
      "        this rule may result in the last element of `out` being greater\n",
      "        than `stop`.\n",
      "    \n",
      "    See Also\n",
      "    --------\n",
      "    numpy.linspace : Evenly spaced numbers with careful handling of endpoints.\n",
      "    numpy.ogrid: Arrays of evenly spaced numbers in N-dimensions.\n",
      "    numpy.mgrid: Grid-shaped arrays of evenly spaced numbers in N-dimensions.\n",
      "    \n",
      "    Examples\n",
      "    --------\n",
      "    >>> np.arange(3)\n",
      "    array([0, 1, 2])\n",
      "    >>> np.arange(3.0)\n",
      "    array([ 0.,  1.,  2.])\n",
      "    >>> np.arange(3,7)\n",
      "    array([3, 4, 5, 6])\n",
      "    >>> np.arange(3,7,2)\n",
      "    array([3, 5])\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(np.arange)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4.01 4.11 4.21 4.31 4.41 4.51 4.61 4.71]\n"
     ]
    }
   ],
   "source": [
    "w=np.arange(4.01,4.72,.1)\n",
    "print(w)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(101,)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Q3\n",
    "x=np.linspace(-2,2,101)\n",
    "x.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Ex.** define a function `mayfly(b,y0)` that returns the population at the next day given the previous day "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "mayfly equation $y_n = b\\, (1-y_{n-1}) \\, y_{n-1}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mayfly(b,y0):\n",
    "    yn = b*(1-y0)*y0\n",
    "    return yn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5625"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mayfly(3,0.75)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Explore what happens in 20 days, for different $b$, $y_0$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "post the graph on the mayfly channel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The behavior in the short run (few/20 days) is called **transient behavior**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=np.linspace(1,3,201)\n",
    "plt.figure(figsize=(6,6))\n",
    "plt.subplots_adjust(wspace=0.3,hspace=0.3) # useful to fix the subplot layout\n",
    "plt.subplot(2,2,1)\n",
    "plt.plot(x,np.log(x))\n",
    "plt.title('log')\n",
    "plt.subplot(2,2,2)\n",
    "plt.plot(x,np.tan(x))\n",
    "plt.title('tan')\n",
    "plt.subplot(2,2,3)\n",
    "plt.plot(x,np.sin(2*x))\n",
    "plt.title('sin')\n",
    "plt.subplot(2,2,4)\n",
    "plt.plot(x,np.cos(2*x))\n",
    "plt.title('cos')\n",
    "plt.suptitle('Super Title')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Ex.** pick a few values of `b` and `y0` and explore the short term behavior, and organize the results in a subplot. \n",
    "Post the results in the mayfly channel on discord (no name necessary on the plot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "blist=[1,2,3,4]\n",
    "ylist=[0.25,0.5,0.75]\n",
    "\n",
    "k=1\n",
    "for b in blist:\n",
    "    for y in ylist:\n",
    "        # comupte mayfly\n",
    "        # plot mayfly\n",
    "        plt.subplot(4,3,k)\n",
    "        plt.plot(b,y,'b^',ms=10)\n",
    "        plt.title(f'B={b}, y0={y}')\n",
    "        k+=1\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Ex.** explore long term behavior (400/500 days)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "note: `alpha` transparency parameter\n",
    "\n",
    "plt.plot(....,alpha=something in [0,1]) 1 fully visible, 0 invisible"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
